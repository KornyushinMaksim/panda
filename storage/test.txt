ОБЩИЕ ТРЕБОВАНИЯ К ВЫПОЛНЕНИЮ ЗАДАНИЙ

1.	SpringBoot - приложение
2.	В качестве слоя доступа к данным – JPA Repository (Spring Data) 
3.	Приложение должно иметь аутентификацию через логин-пароль, которые хранятся в БД
4.	Пользователи должны иметь роли и разграничение доступа по соответствующим ролям. 
5.	Архитектура: REST
6.	Должен быть хотя бы какой-то минимальный фронт на js, который должен запрашивать данные по эндпоинтам (методам контроллера). Требований к JS – нет. Можете использовать любой подход, главное, чтобы фронт выступал в качестве клиента. 
7.	Clean код – хорошо, dirty код – плохо
8.	Наследование, полиморфизм, абстракции, инкапсуляция – если уместно, хорошо
9.	Lombok не возбраняется, а даже поощряется, т.к. экономит строчки электронной бумаги
10.	Использование паттернов – хорошо 
11.	В случае ошибок должны ОБЯЗАТЕЛЬНО прокидываться исключения. Они могут быть кастомными или стандартными – главное, чтобы получение ошибки с клиента было информативным (был виден код ошибки и краткое сообщение – что упало) 
12.	Отсутствие проблемы N+1 – хорошо 
13.	Хорошо продуманная архитектура без костылей – отлично 
14.	Стримы, где они уместны – хорошо 
15.	НЕ использовать ДТО – плохо 
 

Веб-магазин (Сложность 3/5). 

Веб-магазин должен состоять из административной и пользовательской части. 

MVP:
Пользовательская часть предоставляет пользователю следующие возможности: 
- страница с входом (по логину и паролю)
- страница регистрации (с указанием логина и пароля)
- корзина – при добавлении товара с необходимым количеством сохраняется в корзину
- пользователям без аутентификации виден список товаров и возможность пополнять корзину
- для заказа товаров необходимо аутентифицироваться/зарегистрироваться 
- информация о пользователе, где пользователь может добавить и редактировать информацию о себе: ФИО, адрес, телефон, email
- если на странице подтверждения заказа пользовательская информация добавлена, то выводить ее – если нет, выводить пустые поля, где необходимо их заполнить и сохранить в БД, а после этого – подтвердить заказ. 
- для подтверждения заказа нужно нажать кнопку «Подтвердить», реализовывать форму оплаты не требуется. 

Административная часть позволяет: 
- добавлять/изменять карточки товаров, информацию о стоимости, количестве
- возможность инвентаризации с ручным вводом количества товаров
- вкладка «пользователи» - где отображается краткая информация о пользователях: ФИО, телефон, email. 

Extended:
Пользовательская часть: 
- фронт
- строка поиска, где по указанной строке можно найти товар по совпадению/артикулу
- возможность фильтрации по категориям
- реализация истории заказов в карточке пользователя 

Административная часть: 
- фронт
- добавление в карточки товаров категории, 
например: магазин смартфонов – категории: производитель (Apple, Xiaomi, etc..), страна-изготовитель (China, USA, Russia), стоимость: от 100Р до 10_000Р. 
- фильтрация по категориям
- возможность блокировать пользователя, чтобы он не мог войти в систему (через Spring Security) 
- инвентаризация с подсчетом остатков и подсчетом разницы между ДО и ПОСЛЕ инвентаризации 
- во вкладке «пользователи» должна быть кнопка «Просмотр истории» - которая будет выводить историю заказов пользователя
- *** задание со звездочкой загружать фотографии для товаров и хранить их в виде файла в специализированной БД для хранения файлов (для самостоятельного изучения. 
- ** задание с двумя звездочками загружать фотографии для товаров и хранить их в виде файла в самом проекте. 




Вкладки: 
1.	Пользовательская часть: Вход, регистрация, список товаров, корзина, информация о пользователе, история заказов (для Extended) 
2.	Админская часть: Вход, форма для добавления карточки товара, реестр пользователей, информация о пользователе, инвентаризация (для Extended), история заказов (для Extended) 


 
Онлайн-заметки (Сложность 2/5). 

Приложение позволяет пользователю вести набор заметок онлайн. 

MVP:
Приложение должно предоставлять следующие возможности: 
- просмотр заметок с тегом «Общий» возможен любому пользователю, даже не зарегистрированному, по прямой ссылке. Ему доступны действия только на просмотр
- регистрация пользователя (username, email, пароль) 
- создание/изменение/удаление заметки, поиск по заметкам (по наименованию).
- записи в заметках могут содержать текст, а также ссылки на другие заметки. 
- к каждой заметке можно прикрепить набор тегов (например: Общее (по умолчанию), Личное, Работа, Очень личное, NSFW). 
- пользователь может пригласить соавторов для совместной работы над заметками (приглашенному пользователю открывается доступ для редактирования). Удалить может только автор. 
- при удалении заметка попадает в корзину (мягкое удаление) и не выводится в общем списке заметок, ее можно достать из корзины. 
- конечное удаление должно быть реализовано из отдельной вкладки «Корзина» 

Extended:
- фронт
- добавление админской панели, где можно видеть список авторов, банить (блокировать доступ в систему), выводить в реестре авторов: ФИО, дату последней публикации и общее количество заметок. В каждого пользователя можно зайти и увидеть все его публикации. 
- ** задание со звездочкой добавить возможность добавлять медиафайлы – картинки
 
Букинг-приложение (Сложность 2/5). 

Приложение позволяет пользователю арендовать дом или квартиру онлайн, сдать в аренду жилье или дом. 

Должны быть реализованы возможности: 

MVP:
-	регистрация пользователя (ФИО, город, страна, ник, пароль, дата рождения, email)
-	изменение параметров регистрации, 
-	поиск жилья по городу, 
-	возможность разместить объявление: форма для заполнения информации о жилье: город, ближайшая остановка/метро, наличие коммуникаций и т.д., срок сдачи
-	У арендодателя должен быть рейтинг, который выставляется после завершения аренды. Рейтинг варьируется от 1–5 звезд. 
-	У арендатора тоже должен быть рейтинг, который виден только при оформлении заявки на аренду 
-	Заявка на аренду – при нажатии на кнопку «арендовать» со стороны арендатора и «подтвердить аренду» со стороны арендодателя - жилье считается забронированным и его нельзя забронировать повторно на эти дни. 

Extended:

-	Поиск жилья по нескольким параметрам (город, страна, период времени аренды, цена, рейтинг)
-	Можно отменить бронирование 
-	* задание со звездочкой Возможность переписки с пользователем – создать мини-чат для арендатора и арендодателя. Он должен быть виден только участникам переписки и никому другому. 


ОБЩИЕ ТРЕБОВАНИЯ К ВЫПОЛНЕНИЮ ЗАДАНИЙ

1.	SpringBoot - приложение
2.	В качестве слоя доступа к данным – JPA Repository (Spring Data) 
3.	Приложение должно иметь аутентификацию через логин-пароль, которые хранятся в БД
4.	Пользователи должны иметь роли и разграничение доступа по соответствующим ролям. 
5.	Архитектура: REST
6.	Должен быть хотя бы какой-то минимальный фронт на js, который должен запрашивать данные по эндпоинтам (методам контроллера). Требований к JS – нет. Можете использовать любой подход, главное, чтобы фронт выступал в качестве клиента. 
7.	Clean код – хорошо, dirty код – плохо
8.	Наследование, полиморфизм, абстракции, инкапсуляция – если уместно, хорошо
9.	Lombok не возбраняется, а даже поощряется, т.к. экономит строчки электронной бумаги
10.	Использование паттернов – хорошо 
11.	В случае ошибок должны ОБЯЗАТЕЛЬНО прокидываться исключения. Они могут быть кастомными или стандартными – главное, чтобы получение ошибки с клиента было информативным (был виден код ошибки и краткое сообщение – что упало) 
12.	Отсутствие проблемы N+1 – хорошо 
13.	Хорошо продуманная архитектура без костылей – отлично 
14.	Стримы, где они уместны – хорошо 
15.	НЕ использовать ДТО – плохо 
 

Веб-магазин (Сложность 3/5). 

Веб-магазин должен состоять из административной и пользовательской части. 

MVP:
Пользовательская часть предоставляет пользователю следующие возможности: 
- страница с входом (по логину и паролю)
- страница регистрации (с указанием логина и пароля)
- корзина – при добавлении товара с необходимым количеством сохраняется в корзину
- пользователям без аутентификации виден список товаров и возможность пополнять корзину
- для заказа товаров необходимо аутентифицироваться/зарегистрироваться 
- информация о пользователе, где пользователь может добавить и редактировать информацию о себе: ФИО, адрес, телефон, email
- если на странице подтверждения заказа пользовательская информация добавлена, то выводить ее – если нет, выводить пустые поля, где необходимо их заполнить и сохранить в БД, а после этого – подтвердить заказ. 
- для подтверждения заказа нужно нажать кнопку «Подтвердить», реализовывать форму оплаты не требуется. 

Административная часть позволяет: 
- добавлять/изменять карточки товаров, информацию о стоимости, количестве
- возможность инвентаризации с ручным вводом количества товаров
- вкладка «пользователи» - где отображается краткая информация о пользователях: ФИО, телефон, email. 

Extended:
Пользовательская часть: 
- фронт
- строка поиска, где по указанной строке можно найти товар по совпадению/артикулу
- возможность фильтрации по категориям
- реализация истории заказов в карточке пользователя 

Административная часть: 
- фронт
- добавление в карточки товаров категории, 
например: магазин смартфонов – категории: производитель (Apple, Xiaomi, etc..), страна-изготовитель (China, USA, Russia), стоимость: от 100Р до 10_000Р. 
- фильтрация по категориям
- возможность блокировать пользователя, чтобы он не мог войти в систему (через Spring Security) 
- инвентаризация с подсчетом остатков и подсчетом разницы между ДО и ПОСЛЕ инвентаризации 
- во вкладке «пользователи» должна быть кнопка «Просмотр истории» - которая будет выводить историю заказов пользователя
- *** задание со звездочкой загружать фотографии для товаров и хранить их в виде файла в специализированной БД для хранения файлов (для самостоятельного изучения. 
- ** задание с двумя звездочками загружать фотографии для товаров и хранить их в виде файла в самом проекте. 




Вкладки: 
1.	Пользовательская часть: Вход, регистрация, список товаров, корзина, информация о пользователе, история заказов (для Extended) 
2.	Админская часть: Вход, форма для добавления карточки товара, реестр пользователей, информация о пользователе, инвентаризация (для Extended), история заказов (для Extended) 


 
Онлайн-заметки (Сложность 2/5). 

Приложение позволяет пользователю вести набор заметок онлайн. 

MVP:
Приложение должно предоставлять следующие возможности: 
- просмотр заметок с тегом «Общий» возможен любому пользователю, даже не зарегистрированному, по прямой ссылке. Ему доступны действия только на просмотр
- регистрация пользователя (username, email, пароль) 
- создание/изменение/удаление заметки, поиск по заметкам (по наименованию).
- записи в заметках могут содержать текст, а также ссылки на другие заметки. 
- к каждой заметке можно прикрепить набор тегов (например: Общее (по умолчанию), Личное, Работа, Очень личное, NSFW). 
- пользователь может пригласить соавторов для совместной работы над заметками (приглашенному пользователю открывается доступ для редактирования). Удалить может только автор. 
- при удалении заметка попадает в корзину (мягкое удаление) и не выводится в общем списке заметок, ее можно достать из корзины. 
- конечное удаление должно быть реализовано из отдельной вкладки «Корзина» 

Extended:
- фронт
- добавление админской панели, где можно видеть список авторов, банить (блокировать доступ в систему), выводить в реестре авторов: ФИО, дату последней публикации и общее количество заметок. В каждого пользователя можно зайти и увидеть все его публикации. 
- ** задание со звездочкой добавить возможность добавлять медиафайлы – картинки
 
Букинг-приложение (Сложность 2/5). 

Приложение позволяет пользователю арендовать дом или квартиру онлайн, сдать в аренду жилье или дом. 

Должны быть реализованы возможности: 

MVP:
-	регистрация пользователя (ФИО, город, страна, ник, пароль, дата рождения, email)
-	изменение параметров регистрации, 
-	поиск жилья по городу, 
-	возможность разместить объявление: форма для заполнения информации о жилье: город, ближайшая остановка/метро, наличие коммуникаций и т.д., срок сдачи
-	У арендодателя должен быть рейтинг, который выставляется после завершения аренды. Рейтинг варьируется от 1–5 звезд. 
-	У арендатора тоже должен быть рейтинг, который виден только при оформлении заявки на аренду 
-	Заявка на аренду – при нажатии на кнопку «арендовать» со стороны арендатора и «подтвердить аренду» со стороны арендодателя - жилье считается забронированным и его нельзя забронировать повторно на эти дни. 

Extended:

-	Поиск жилья по нескольким параметрам (город, страна, период времени аренды, цена, рейтинг)
-	Можно отменить бронирование 
-	* задание со звездочкой Возможность переписки с пользователем – создать мини-чат для арендатора и арендодателя. Он должен быть виден только участникам переписки и никому другому. 


ОБЩИЕ ТРЕБОВАНИЯ К ВЫПОЛНЕНИЮ ЗАДАНИЙ

1.	SpringBoot - приложение
2.	В качестве слоя доступа к данным – JPA Repository (Spring Data) 
3.	Приложение должно иметь аутентификацию через логин-пароль, которые хранятся в БД
4.	Пользователи должны иметь роли и разграничение доступа по соответствующим ролям. 
5.	Архитектура: REST
6.	Должен быть хотя бы какой-то минимальный фронт на js, который должен запрашивать данные по эндпоинтам (методам контроллера). Требований к JS – нет. Можете использовать любой подход, главное, чтобы фронт выступал в качестве клиента. 
7.	Clean код – хорошо, dirty код – плохо
8.	Наследование, полиморфизм, абстракции, инкапсуляция – если уместно, хорошо
9.	Lombok не возбраняется, а даже поощряется, т.к. экономит строчки электронной бумаги
10.	Использование паттернов – хорошо 
11.	В случае ошибок должны ОБЯЗАТЕЛЬНО прокидываться исключения. Они могут быть кастомными или стандартными – главное, чтобы получение ошибки с клиента было информативным (был виден код ошибки и краткое сообщение – что упало) 
12.	Отсутствие проблемы N+1 – хорошо 
13.	Хорошо продуманная архитектура без костылей – отлично 
14.	Стримы, где они уместны – хорошо 
15.	НЕ использовать ДТО – плохо 
 

Веб-магазин (Сложность 3/5). 

Веб-магазин должен состоять из административной и пользовательской части. 

MVP:
Пользовательская часть предоставляет пользователю следующие возможности: 
- страница с входом (по логину и паролю)
- страница регистрации (с указанием логина и пароля)
- корзина – при добавлении товара с необходимым количеством сохраняется в корзину
- пользователям без аутентификации виден список товаров и возможность пополнять корзину
- для заказа товаров необходимо аутентифицироваться/зарегистрироваться 
- информация о пользователе, где пользователь может добавить и редактировать информацию о себе: ФИО, адрес, телефон, email
- если на странице подтверждения заказа пользовательская информация добавлена, то выводить ее – если нет, выводить пустые поля, где необходимо их заполнить и сохранить в БД, а после этого – подтвердить заказ. 
- для подтверждения заказа нужно нажать кнопку «Подтвердить», реализовывать форму оплаты не требуется. 

Административная часть позволяет: 
- добавлять/изменять карточки товаров, информацию о стоимости, количестве
- возможность инвентаризации с ручным вводом количества товаров
- вкладка «пользователи» - где отображается краткая информация о пользователях: ФИО, телефон, email. 

Extended:
Пользовательская часть: 
- фронт
- строка поиска, где по указанной строке можно найти товар по совпадению/артикулу
- возможность фильтрации по категориям
- реализация истории заказов в карточке пользователя 

Административная часть: 
- фронт
- добавление в карточки товаров категории, 
например: магазин смартфонов – категории: производитель (Apple, Xiaomi, etc..), страна-изготовитель (China, USA, Russia), стоимость: от 100Р до 10_000Р. 
- фильтрация по категориям
- возможность блокировать пользователя, чтобы он не мог войти в систему (через Spring Security) 
- инвентаризация с подсчетом остатков и подсчетом разницы между ДО и ПОСЛЕ инвентаризации 
- во вкладке «пользователи» должна быть кнопка «Просмотр истории» - которая будет выводить историю заказов пользователя
- *** задание со звездочкой загружать фотографии для товаров и хранить их в виде файла в специализированной БД для хранения файлов (для самостоятельного изучения. 
- ** задание с двумя звездочками загружать фотографии для товаров и хранить их в виде файла в самом проекте. 




Вкладки: 
1.	Пользовательская часть: Вход, регистрация, список товаров, корзина, информация о пользователе, история заказов (для Extended) 
2.	Админская часть: Вход, форма для добавления карточки товара, реестр пользователей, информация о пользователе, инвентаризация (для Extended), история заказов (для Extended) 


 
Онлайн-заметки (Сложность 2/5). 

Приложение позволяет пользователю вести набор заметок онлайн. 

MVP:
Приложение должно предоставлять следующие возможности: 
- просмотр заметок с тегом «Общий» возможен любому пользователю, даже не зарегистрированному, по прямой ссылке. Ему доступны действия только на просмотр
- регистрация пользователя (username, email, пароль) 
- создание/изменение/удаление заметки, поиск по заметкам (по наименованию).
- записи в заметках могут содержать текст, а также ссылки на другие заметки. 
- к каждой заметке можно прикрепить набор тегов (например: Общее (по умолчанию), Личное, Работа, Очень личное, NSFW). 
- пользователь может пригласить соавторов для совместной работы над заметками (приглашенному пользователю открывается доступ для редактирования). Удалить может только автор. 
- при удалении заметка попадает в корзину (мягкое удаление) и не выводится в общем списке заметок, ее можно достать из корзины. 
- конечное удаление должно быть реализовано из отдельной вкладки «Корзина» 

Extended:
- фронт
- добавление админской панели, где можно видеть список авторов, банить (блокировать доступ в систему), выводить в реестре авторов: ФИО, дату последней публикации и общее количество заметок. В каждого пользователя можно зайти и увидеть все его публикации. 
- ** задание со звездочкой добавить возможность добавлять медиафайлы – картинки
 
Букинг-приложение (Сложность 2/5). 

Приложение позволяет пользователю арендовать дом или квартиру онлайн, сдать в аренду жилье или дом. 

Должны быть реализованы возможности: 

MVP:
-	регистрация пользователя (ФИО, город, страна, ник, пароль, дата рождения, email)
-	изменение параметров регистрации, 
-	поиск жилья по городу, 
-	возможность разместить объявление: форма для заполнения информации о жилье: город, ближайшая остановка/метро, наличие коммуникаций и т.д., срок сдачи
-	У арендодателя должен быть рейтинг, который выставляется после завершения аренды. Рейтинг варьируется от 1–5 звезд. 
-	У арендатора тоже должен быть рейтинг, который виден только при оформлении заявки на аренду 
-	Заявка на аренду – при нажатии на кнопку «арендовать» со стороны арендатора и «подтвердить аренду» со стороны арендодателя - жилье считается забронированным и его нельзя забронировать повторно на эти дни. 

Extended:

-	Поиск жилья по нескольким параметрам (город, страна, период времени аренды, цена, рейтинг)
-	Можно отменить бронирование 
-	* задание со звездочкой Возможность переписки с пользователем – создать мини-чат для арендатора и арендодателя. Он должен быть виден только участникам переписки и никому другому. 


ОБЩИЕ ТРЕБОВАНИЯ К ВЫПОЛНЕНИЮ ЗАДАНИЙ

1.	SpringBoot - приложение
2.	В качестве слоя доступа к данным – JPA Repository (Spring Data) 
3.	Приложение должно иметь аутентификацию через логин-пароль, которые хранятся в БД
4.	Пользователи должны иметь роли и разграничение доступа по соответствующим ролям. 
5.	Архитектура: REST
6.	Должен быть хотя бы какой-то минимальный фронт на js, который должен запрашивать данные по эндпоинтам (методам контроллера). Требований к JS – нет. Можете использовать любой подход, главное, чтобы фронт выступал в качестве клиента. 
7.	Clean код – хорошо, dirty код – плохо
8.	Наследование, полиморфизм, абстракции, инкапсуляция – если уместно, хорошо
9.	Lombok не возбраняется, а даже поощряется, т.к. экономит строчки электронной бумаги
10.	Использование паттернов – хорошо 
11.	В случае ошибок должны ОБЯЗАТЕЛЬНО прокидываться исключения. Они могут быть кастомными или стандартными – главное, чтобы получение ошибки с клиента было информативным (был виден код ошибки и краткое сообщение – что упало) 
12.	Отсутствие проблемы N+1 – хорошо 
13.	Хорошо продуманная архитектура без костылей – отлично 
14.	Стримы, где они уместны – хорошо 
15.	НЕ использовать ДТО – плохо 
 

Веб-магазин (Сложность 3/5). 

Веб-магазин должен состоять из административной и пользовательской части. 

MVP:
Пользовательская часть предоставляет пользователю следующие возможности: 
- страница с входом (по логину и паролю)
- страница регистрации (с указанием логина и пароля)
- корзина – при добавлении товара с необходимым количеством сохраняется в корзину
- пользователям без аутентификации виден список товаров и возможность пополнять корзину
- для заказа товаров необходимо аутентифицироваться/зарегистрироваться 
- информация о пользователе, где пользователь может добавить и редактировать информацию о себе: ФИО, адрес, телефон, email
- если на странице подтверждения заказа пользовательская информация добавлена, то выводить ее – если нет, выводить пустые поля, где необходимо их заполнить и сохранить в БД, а после этого – подтвердить заказ. 
- для подтверждения заказа нужно нажать кнопку «Подтвердить», реализовывать форму оплаты не требуется. 

Административная часть позволяет: 
- добавлять/изменять карточки товаров, информацию о стоимости, количестве
- возможность инвентаризации с ручным вводом количества товаров
- вкладка «пользователи» - где отображается краткая информация о пользователях: ФИО, телефон, email. 

Extended:
Пользовательская часть: 
- фронт
- строка поиска, где по указанной строке можно найти товар по совпадению/артикулу
- возможность фильтрации по категориям
- реализация истории заказов в карточке пользователя 

Административная часть: 
- фронт
- добавление в карточки товаров категории, 
например: магазин смартфонов – категории: производитель (Apple, Xiaomi, etc..), страна-изготовитель (China, USA, Russia), стоимость: от 100Р до 10_000Р. 
- фильтрация по категориям
- возможность блокировать пользователя, чтобы он не мог войти в систему (через Spring Security) 
- инвентаризация с подсчетом остатков и подсчетом разницы между ДО и ПОСЛЕ инвентаризации 
- во вкладке «пользователи» должна быть кнопка «Просмотр истории» - которая будет выводить историю заказов пользователя
- *** задание со звездочкой загружать фотографии для товаров и хранить их в виде файла в специализированной БД для хранения файлов (для самостоятельного изучения. 
- ** задание с двумя звездочками загружать фотографии для товаров и хранить их в виде файла в самом проекте. 




Вкладки: 
1.	Пользовательская часть: Вход, регистрация, список товаров, корзина, информация о пользователе, история заказов (для Extended) 
2.	Админская часть: Вход, форма для добавления карточки товара, реестр пользователей, информация о пользователе, инвентаризация (для Extended), история заказов (для Extended) 


 
Онлайн-заметки (Сложность 2/5). 

Приложение позволяет пользователю вести набор заметок онлайн. 

MVP:
Приложение должно предоставлять следующие возможности: 
- просмотр заметок с тегом «Общий» возможен любому пользователю, даже не зарегистрированному, по прямой ссылке. Ему доступны действия только на просмотр
- регистрация пользователя (username, email, пароль) 
- создание/изменение/удаление заметки, поиск по заметкам (по наименованию).
- записи в заметках могут содержать текст, а также ссылки на другие заметки. 
- к каждой заметке можно прикрепить набор тегов (например: Общее (по умолчанию), Личное, Работа, Очень личное, NSFW). 
- пользователь может пригласить соавторов для совместной работы над заметками (приглашенному пользователю открывается доступ для редактирования). Удалить может только автор. 
- при удалении заметка попадает в корзину (мягкое удаление) и не выводится в общем списке заметок, ее можно достать из корзины. 
- конечное удаление должно быть реализовано из отдельной вкладки «Корзина» 

Extended:
- фронт
- добавление админской панели, где можно видеть список авторов, банить (блокировать доступ в систему), выводить в реестре авторов: ФИО, дату последней публикации и общее количество заметок. В каждого пользователя можно зайти и увидеть все его публикации. 
- ** задание со звездочкой добавить возможность добавлять медиафайлы – картинки
 
Букинг-приложение (Сложность 2/5). 

Приложение позволяет пользователю арендовать дом или квартиру онлайн, сдать в аренду жилье или дом. 

Должны быть реализованы возможности: 

MVP:
-	регистрация пользователя (ФИО, город, страна, ник, пароль, дата рождения, email)
-	изменение параметров регистрации, 
-	поиск жилья по городу, 
-	возможность разместить объявление: форма для заполнения информации о жилье: город, ближайшая остановка/метро, наличие коммуникаций и т.д., срок сдачи
-	У арендодателя должен быть рейтинг, который выставляется после завершения аренды. Рейтинг варьируется от 1–5 звезд. 
-	У арендатора тоже должен быть рейтинг, который виден только при оформлении заявки на аренду 
-	Заявка на аренду – при нажатии на кнопку «арендовать» со стороны арендатора и «подтвердить аренду» со стороны арендодателя - жилье считается забронированным и его нельзя забронировать повторно на эти дни. 

Extended:

-	Поиск жилья по нескольким параметрам (город, страна, период времени аренды, цена, рейтинг)
-	Можно отменить бронирование 
-	* задание со звездочкой Возможность переписки с пользователем – создать мини-чат для арендатора и арендодателя. Он должен быть виден только участникам переписки и никому другому. 


